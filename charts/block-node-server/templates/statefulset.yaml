{{- /*
SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hiero-block-node.fullname" . }}
  labels:
    {{- include "hiero-block-node.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "hiero-block-node.fullname" . }}
  selector:
    matchLabels:
      {{- include "hiero-block-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hiero-block-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hiero-block-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: logging-config
          configMap:
            name: {{ include "hiero-block-node.fullname" . }}-logging-config
        {{- if and .Values.blockNode.backfill .Values.blockNode.backfill.sources }}
        - name: block-node-sources
          configMap:
            name: {{ include "hiero-block-node.fullname" . }}-block-node-sources
        {{- end }}
      {{- with .Values.blockNode.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.service.port }}
            protocol: TCP
          - name: metrics
            containerPort: {{ .Values.blockNode.health.metrics.port }}
            protocol: TCP
        envFrom:
          - configMapRef:
              name: {{ include "hiero-block-node.fullname" . }}-config
          {{- if .Values.blockNode.secret }}
          - secretRef:
              name: {{ include "hiero-block-node.fullname" . }}-secret
          {{- else if .Values.blockNode.secretRef }}
          - secretRef:
              name: {{ .Values.blockNode.secretRef }}
          {{- end }}
        volumeMounts:
          - name: logging-config
            mountPath: {{ .Values.blockNode.logs.configMountPath }}
            readOnly: true
          - name: {{ default "logging-data" .Values.blockNode.persistence.logging.volumeName }}
            mountPath: {{ .Values.blockNode.persistence.logging.mountPath }}
          - name: {{ default "archive-storage" .Values.blockNode.persistence.archive.volumeName }}
            mountPath: {{ .Values.blockNode.persistence.archive.mountPath }}
            subPath: {{ .Values.blockNode.persistence.archive.subPath }}
          - name: {{ default "live-storage" .Values.blockNode.persistence.live.volumeName }}
            mountPath: {{ .Values.blockNode.persistence.live.mountPath }}
            subPath: {{ .Values.blockNode.persistence.live.subPath }}
          {{- if and .Values.blockNode.backfill .Values.blockNode.backfill.sources }}
          - name: block-node-sources
            mountPath: {{ .Values.blockNode.backfill.path }}
            readOnly: true
          {{- end }}
        {{- with  .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.blockNode.health.liveness.endpoint }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: 50
          periodSeconds: 10
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: {{ .Values.blockNode.health.readiness.endpoint }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: 40
          timeoutSeconds: 2
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ default "logging-data" .Values.blockNode.persistence.logging.volumeName }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.blockNode.persistence.logging.size }}
        {{- if .Values.blockNode.persistence.logging.storageClass }}
        storageClassName: {{ .Values.blockNode.persistence.logging.storageClass }}
        {{- end }}
    - metadata:
        name: {{ default "archive-storage" .Values.blockNode.persistence.archive.volumeName }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.blockNode.persistence.archive.size }}
        {{- if .Values.blockNode.persistence.archive.storageClass }}
        storageClassName: {{ .Values.blockNode.persistence.archive.storageClass }}
        {{- end }}
    - metadata:
        name: {{ default "live-storage" .Values.blockNode.persistence.live.volumeName }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.blockNode.persistence.live.size }}
        {{- if .Values.blockNode.persistence.live.storageClass }}
        storageClassName: {{ .Values.blockNode.persistence.live.storageClass }}
        {{- end }}
