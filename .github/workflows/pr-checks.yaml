# SPDX-License-Identifier: Apache-2.0
name: "PR Checks"
on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

defaults:
  run:
    shell: bash

env:
  GRADLE_EXEC: "ionice -c 2 -n 2 nice -n 19 ./gradlew "

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  check-gradle:
    name: Gradle
    if: ${{ github.base_ref == 'main' || startsWith(github.base_ref, 'release/') }}
    uses: ./.github/workflows/zxc-verify-gradle-build-determinism.yaml
    with:
      ref: ${{ github.event.inputs.ref || '' }}
      java-distribution: ${{ inputs.java-distribution || 'temurin' }}
      java-version: ${{ inputs.java-version || '21.0.6' }}

  compile:
    timeout-minutes: 20
    name: "Quality Checks and UTs"
    runs-on: hiero-block-node-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Expand Shallow Clone for Spotless
        run: |
          if [ -f .git/shallow ]; then
            git fetch --unshallow --no-recurse-submodules
          else
            echo "Repository is not shallow, no need to unshallow."
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: "temurin"
          java-version: "21.0.6"

      - name: Cache Gradle packages
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        id: gradle-build
        run: ${GRADLE_EXEC} assemble

      - name: Style Check
        id: spotless-check
        run: ${GRADLE_EXEC} qualityCheck --continue

      - name: Unit Tests
        id: unit-tests
        run: ${GRADLE_EXEC} check

      - name: Upload coverage report
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: gradle/aggregation/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
