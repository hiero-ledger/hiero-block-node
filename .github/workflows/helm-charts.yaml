# SPDX-License-Identifier: Apache-2.0
name: Lint and Test Charts

on: pull_request

permissions:
  contents: read

env:
  CGEXEC: "ionice -c 2 -n 2 nice -n 19 "

jobs:
  lint-install-test:
    timeout-minutes: 20
    name: Lint and Install Charts
    runs-on: hiero-block-node-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: Azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.14.4

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ${CGEXEC} ct lint --config ct.yaml

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Update chart dependency
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add prometheus-community  https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm dependency update charts/block-node-server

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ${CGEXEC} ct install --config ct.yaml
