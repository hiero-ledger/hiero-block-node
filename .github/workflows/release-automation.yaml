# SPDX-License-Identifier: Apache-2.0
name: Release Automation

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (semver)"
        required: true

permissions:
  contents: write
  actions: write

defaults:
  run:
    shell: bash

jobs:
  release:
    timeout-minutes: 15
    name: Release
    runs-on: hiero-block-node-linux-medium
    env:
      RELEASE_NOTES_FILENAME: release_notes
    outputs:
      create_pr: ${{ env.CREATE_PR }}
      next_version_snapshot: ${{ env.NEXT_VERSION_SNAPSHOT }}
      pr_title: ${{ env.PR_TITLE }}
      release_branch: ${{ env.RELEASE_BRANCH }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Parse Version
        id: version_parser
        uses: step-security/semver-utils@4ae9c1fd6d1c5f8f152fe7e2efe8069a952c2ace # v4.3.2
        with:
          lenient: false
          version: ${{ github.event.inputs.version }}

      - name: Set Release Environment Variables
        run: |
          PREMINOR_VERSION=${{ steps.version_parser.outputs.inc-preminor }}
          NEXT_VERSION_SNAPSHOT=${PREMINOR_VERSION//-0/-SNAPSHOT}
          RELEASE_BRANCH="release/${{ steps.version_parser.outputs.major }}.${{ steps.version_parser.outputs.minor }}"
          [[ -z "${{ steps.version_parser.outputs.prerelease }}" ]] && \
            VERSION=${{ steps.version_parser.outputs.release }} || \
            VERSION="${{ steps.version_parser.outputs.release }}-${{ steps.version_parser.outputs.prerelease }}"
          RELEASE_TAG="v${VERSION}"

          cat >> $GITHUB_ENV <<EOF
          NEXT_VERSION_SNAPSHOT=$NEXT_VERSION_SNAPSHOT
          RELEASE_BRANCH=$RELEASE_BRANCH
          RELEASE_TAG=$RELEASE_TAG
          VERSION=$VERSION
          EOF

      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          persist-credentials: "true"

      - name: Import GPG Key
        id: gpg_importer
        uses: step-security/ghaction-import-gpg@69c854a83c7f79463f8bdf46772ab09826c560cd # v6.3.1
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_KEY_CONTENTS }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}

      - name: Install JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: "temurin"
          java-version: "21.0.6"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Create and Switch to Release Branch
        run: |
          git fetch origin
          if ! git ls-remote --exit-code --heads --quiet origin refs/heads/${RELEASE_BRANCH}; then
            git checkout -b ${RELEASE_BRANCH}
            git push -u origin ${RELEASE_BRANCH}

            # create a PR to bump main branch to the next snapshot version
            echo "CREATE_PR=true" >> $GITHUB_ENV
            echo "PR_TITLE=chore(release): Bump versions for v$NEXT_VERSION_SNAPSHOT" >> $GITHUB_ENV
          else
            git checkout ${RELEASE_BRANCH}
          fi

      # task is currently failing due to needing credentials.username for PublishToMavenRepository task
      #- name: Gradle Release
      #  run: ./gradlew release -Pversion=${{ env.VERSION }}

      - name: Bump Version
        run: ./gradlew versionAsSpecified -PnewVersion=${{ env.VERSION }}

      - name: Close the Milestone
        if: ${{ steps.version_parser.outputs.prerelease == '' }}
        id: milestone
        uses: step-security/close-milestone@b097272a7aaa0f5c40dc6bc671d45d35c5e85b51 # v2.2.1
        with:
          milestone_name: ${{ steps.version_parser.outputs.release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Commit and Tag
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6.0.1
        with:
          commit_author: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          commit_message: Bump versions for ${{ env.RELEASE_TAG }}
          commit_options: "--no-verify --signoff"
          commit_user_name: ${{ steps.gpg_importer.outputs.name }}
          commit_user_email: ${{ steps.gpg_importer.outputs.email }}
          tagging_message: ${{ env.RELEASE_TAG }}

      - name: Create Github Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          allowUpdates: true
          commit: ${{ env.RELEASE_BRANCH }}
          draft: ${{ steps.version_parser.outputs.prerelease == '' }}
          generateReleaseNotes: true
          name: ${{ env.RELEASE_TAG }}
          omitBody: ${{ steps.milestone.outputs.milestone_id == '' }}
          prerelease: ${{ steps.version_parser.outputs.prerelease != '' }}
          tag: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}

  create_pr:
    timeout-minutes: 10
    name: Create PR
    runs-on: hiero-block-node-linux-medium
    needs: release
    if: ${{ needs.release.outputs.create_pr == 'true' }}
    env:
      NEXT_VERSION_SNAPSHOT: ${{ needs.release.outputs.next_version_snapshot }}
      RELEASE_BRANCH: ${{ needs.release.outputs.release_branch }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Import GPG Key
        id: gpg_importer
        uses: step-security/ghaction-import-gpg@69c854a83c7f79463f8bdf46772ab09826c560cd # v6.3.1
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_KEY_CONTENTS }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}

      - name: Install JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: "temurin"
          java-version: "21.0.6"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Reset main to release branch
        run: |
          git fetch origin $RELEASE_BRANCH:$RELEASE_BRANCH
          git reset --hard $RELEASE_BRANCH

      - name: Gradle Release for Next Minor Snapshot
        run: ./gradlew versionAsSpecified -PnewVersion=${{ env.NEXT_VERSION_SNAPSHOT }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          author: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          body: Bump versions for v${{ env.NEXT_VERSION_SNAPSHOT }}
          branch: create-pull-request/${{ env.RELEASE_BRANCH }}
          commit-message: Bump versions for v${{ env.NEXT_VERSION_SNAPSHOT }}
          committer: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          delete-branch: true
          signoff: true
          title: ${{ needs.release.outputs.pr_title }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
