/**
 * # Block Proof
 * A proof for the block streamed from a consensus node.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package com.hedera.hapi.block.stream.experimental;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hedera.hapi.block.stream.experimental.protoc";
// <<<pbj.java_package = "com.hedera.hapi.block.stream.experimental">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "services/basic_types.proto";

/**
 * A collection of hashes of sub parts of the blocks top fixed merkle tree that are needed to compute the
 * blocks root hash. These are the hashes of the first 3 nodes across the bottom of the block fixed merkle
 * tree in field order.
 */
message BlockFooter {
    /**
     * The root hash of the block, for the previous block to the one this footer belongs to. For wrapped record file
     * blocks, this is the hash of the previous wrapped record file block.
     */
    bytes previous_block_root_hash = 1;
    /**
     * The root hash of a merkle tree containing the root hashes of all block from block zero up to but not
     * including this current block. For wrapped record file blocks, the hash of the wrapped block is used in tree.
     */
    bytes root_hash_of_all_block_hashes_tree = 2;
    /**
     * The root hash of the state merkle tree for the version of state at the beginning of the current block. This is
     * empty for wrapped record file blocks as they do not have state information.
     */
    bytes start_of_block_state_root_hash = 3;
}
